name: Provision K3s
run-name: Provision K3s
on: [workflow_dispatch]
jobs:
  Provision_VM:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./.terraform        
      - name: Terraform Apply
        run: terraform apply -var public_key="${{ secrets.SSH_PUBLIC_KEY }}" -auto-approve
        working-directory: ./.terraform
      - name: Set VM hostname as output
        run: echo hostname="$( terraform-bin output hostname )" >> $GITHUB_OUTPUT
        id: set_vm_hostname_as_output
        working-directory: ./.terraform
    outputs:
      hostname: ${{ steps.set_vm_hostname_as_output.outputs.hostname }}
  Install_K3S:
    needs: Provision_VM
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: site.yml
          # Optional, directory where playbooks live
          directory: ./.ansible
          # Optional, SSH private key
          key: ${{secrets.SSH_KEY}}
          # Optional, additional flags to pass to ansible-playbook
          options: |
            --inventory "${{ needs.Provision_VM.outputs.hostname }},"
            --user ubuntu
            --extra-vars "master_ip=${{ needs.Provision_VM.outputs.hostname }} k3s_version=v1.23.16+k3s1 systemd_dir=/etc/systemd/system"
            --verbose         
      - name: Set kube config as secret
        run: |
          cat ./.kube.config
          base64 ./.kube.config > ./.base64.kube.config
          cat ./.base64.kube.config
          gh secret set BASE64_KUBE_CONFIG < ./.base64.kube.config
        working-directory: ./.ansible
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}    